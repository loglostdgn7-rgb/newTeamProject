#version: "3.8"
services:
  # 1. Spring Boot 애플리케이션 서비스
  my-app:
    container_name: new-team-project-app
    # [변경] Docker Hub에서 이미지를 가져오도록 설정
    # DOCKERHUB_USERNAME은 GHA Secret에서 주입되며, new-team-project는 1단계에서 만든 리포지토리 이름입니다.
    image: ${DOCKERHUB_USERNAME}/new-team-project:latest
    ports:
      - "8081:8080" # 외부 8081 -> 내부 8080
    depends_on:
      - team-db     # team-db가 먼저 실행되어야 함
    restart: always
    environment:
      # [수정] GHA Secret에서 주입받을 7개의 환경 변수
      - PORTONE_API_KEY=${PORTONE_API_KEY}
      - PORTONE_SECRET=${PORTONE_SECRET}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
      - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}

      # (중요) application.properties의 DB 설정을 덮어쓰기
      # DB 호스트를 'localhost'가 아닌 DB 서비스 이름 'team-db'로 지정
      - SPRING_DATASOURCE_URL=jdbc:mysql://team-db:3306/team
      - SPRING_DATASOURCE_USERNAME=root
      # [수정] GHA Secret에서 주입받을 DB 비번
      - SPRING_DATASOURCE_PASSWORD=${DB_PASS}

  # 2. MySQL 데이터베이스 서비스
  team-db:
    image: mysql:8.4.3
    container_name: team-db
    restart: always
    environment:
      MYSQL_DATABASE: "team"
      MYSQL_ROOT_USER: "root"
      # [수정] GHA Secret에서 주입받을 DB 비번
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
    volumes:
      - db-data:/var/lib/mysql
      # 서버(호스트)의 /home/ubuntu/init.sql 파일을 컨테이너 시작 시 실행
      - /home/ubuntu/init.sql:/docker-entrypoint-initdb.d/init.sql

# DB 데이터 영구 저장을 위한 볼륨
volumes:
  db-data: