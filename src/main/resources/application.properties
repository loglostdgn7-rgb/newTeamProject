spring.application.name=NewTeamProject
##session
server.servlet.session.timeout=3h
#server error
server.error.whitelabel.enabled=false
##tymeleaf
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
##DB (docker-compose.yml ?? .env?? ?? ????? ??)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
## MYBATIS
mybatis.config-location=classpath:mybatis/configuration.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
##Multipart (file upload/download)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=1KB
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=300MB
##PortOne (.env?? ?? ????? ??)
portone.api.key=${PORTONE_API_KEY}
portone.api.secret=${PORTONE_SECRET}
## OAuth2
#google
#spring.security.oauth2.client.registration.google.client-name=google
#spring.security.oauth2.client.registration.google.client-id=EXAMPLE
#spring.security.oauth2.client.registration.google.client-secret=EXAMPLE
#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
#spring.security.oauth2.client.registration.google.scope=email,profile
#kakao
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-info-authentication-method=get
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://http://filaportfolio.duckdns.org/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
#naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-info-authentication-method=get
spring.security.oauth2.client.provider.naver.user-name-attribute=response
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}

spring.security.oauth2.client.registration.naver.redirect-uri=http://http://filaportfolio.duckdns.org/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.scope=nickname
#  Nginx ???? ?? ??
server.forward-headers-strategy=NATIVE