name: CI/CD Pipeline

on:
  push:
    branches:
      - "Youngsoo-deploy"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 1. 소스 코드 체크아웃
        uses: actions/checkout@v4

      - name: 2. JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: 3. Maven으로 프로젝트 빌드 (테스트 스킵)
        run: mvn clean install -DskipTests # .jar 파일 생성

      - name: 4. Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # GitHub Secret에서 ID 가져오기
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # GitHub Secret에서 토큰 가져오기

      - name: 5. Docker 이미지 빌드 및 Docker Hub에 Push
        uses: docker/build-push-action@v5
        with:
          context: .  # 프로젝트 루트 디렉토리
          file: ./.deploy/Dockerfile # Dockerfile 경로
          push: true  # 빌드 후 Push 실행
          # Docker Hub 리포지토리 태그 (예: loglost/new-team-project:latest)
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/new-team-project:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 1. 원격 서버에서 배포 스크립트 실행
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          port: 22
          script: |
            cd /root/newTeamProject
            # [유지] docker-compose.yml 파일 등 최신화
            git pull origin Youngsoo-deploy
            
            # [수정] 
            # 서버의 .deploy/.env 파일이 모든 환경 변수를 관리하므로
            # GitHub Secret에서 export로 주입하던 8줄을 모두 삭제합니다.
            
            # [추가] Docker Hub에서 최신 이미지 PULL
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/new-team-project:latest

            # [변경] .env 파일이 있는 .deploy 폴더로 이동해서 실행
            cd .deploy
            
            # Docker Compose 실행 (자동으로 .env 파일을 읽음)
            docker compose down
            docker compose up -d
            
            # Docker 이미지 정리
            docker image prune -f